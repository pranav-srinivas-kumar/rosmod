// Generated by gencpp from file trajectory_planning_package/compute.msg
// DO NOT EDIT!


#ifndef TRAJECTORY_PLANNING_PACKAGE_MESSAGE_COMPUTE_H
#define TRAJECTORY_PLANNING_PACKAGE_MESSAGE_COMPUTE_H

#include <ros/service_traits.h>


#include <trajectory_planning_package/computeRequest.h>
#include <trajectory_planning_package/computeResponse.h>


namespace trajectory_planning_package
{

struct compute
{

typedef computeRequest Request;
typedef computeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct compute
} // namespace trajectory_planning_package


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::trajectory_planning_package::compute > {
  static const char* value()
  {
    return "db6eac0cd8499c2f814eda61ea5f8077";
  }

  static const char* value(const ::trajectory_planning_package::compute&) { return value(); }
};

template<>
struct DataType< ::trajectory_planning_package::compute > {
  static const char* value()
  {
    return "trajectory_planning_package/compute";
  }

  static const char* value(const ::trajectory_planning_package::compute&) { return value(); }
};


// service_traits::MD5Sum< ::trajectory_planning_package::computeRequest> should match 
// service_traits::MD5Sum< ::trajectory_planning_package::compute > 
template<>
struct MD5Sum< ::trajectory_planning_package::computeRequest>
{
  static const char* value()
  {
    return MD5Sum< ::trajectory_planning_package::compute >::value();
  }
  static const char* value(const ::trajectory_planning_package::computeRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::trajectory_planning_package::computeRequest> should match 
// service_traits::DataType< ::trajectory_planning_package::compute > 
template<>
struct DataType< ::trajectory_planning_package::computeRequest>
{
  static const char* value()
  {
    return DataType< ::trajectory_planning_package::compute >::value();
  }
  static const char* value(const ::trajectory_planning_package::computeRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::trajectory_planning_package::computeResponse> should match 
// service_traits::MD5Sum< ::trajectory_planning_package::compute > 
template<>
struct MD5Sum< ::trajectory_planning_package::computeResponse>
{
  static const char* value()
  {
    return MD5Sum< ::trajectory_planning_package::compute >::value();
  }
  static const char* value(const ::trajectory_planning_package::computeResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::trajectory_planning_package::computeResponse> should match 
// service_traits::DataType< ::trajectory_planning_package::compute > 
template<>
struct DataType< ::trajectory_planning_package::computeResponse>
{
  static const char* value()
  {
    return DataType< ::trajectory_planning_package::compute >::value();
  }
  static const char* value(const ::trajectory_planning_package::computeResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TRAJECTORY_PLANNING_PACKAGE_MESSAGE_COMPUTE_H
