$hash_include "ros/ros.h"
$hash_include <cstdlib>

// Required for boost::thread
$hash_include <boost/thread.hpp>

// Include all components this actor requires
#if $len($components) > 0
#for $comp in $components
$hash_include "$package_name/${comp.comp_type.name}.hpp" 
#end for

#end if

void componentThread(Component* compPtr)
{
    compPtr->startUp();
    compPtr->processQueue();
}

int main(int argc, char **argv)
{
    std::string nodeName = "$node_name";
    ros::init(argc, argv, nodeName.c_str());

    // Create Node Handle
    ros::NodeHandle n;

    // Create Component Objects
    #if $len($components) > 0
    #for $comp in $components
    $comp.comp_type.name $comp.name; 
    #end for

    #end if
    // Create Component Threads
    #if $len($components) > 0
    #for $comp in $components
    boost::thread ${comp.name}_thread(componentThread, &${comp.name});
    ROS_INFO("Node ${node_name} has started ${comp.name}");
    #end for

    #end if    

    ROS_INFO_STREAM("NodeMain thread id = " << boost::this_thread::get_id());

    // Create Component Threads
    #if $len($components) > 0
    #for $comp in $components
    ${comp.name}_thread.join();
    #end for

    #end if 

    return 0; 
}

