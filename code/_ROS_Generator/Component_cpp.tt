#include "<#Write(hpp.comp_name);#>.hpp"

using namespace <#Write(hpp.node_name);#>;

// -------------------------------------------------------
// BUSINESS LOGIC OF THESE FUNCTIONS SUPPLIED BY DEVELOPER
// -------------------------------------------------------

// Init Function
void <#Write(hpp.comp_name);#>::Init(const ros::TimerEvent& event)
{
<#Write("    ");#>// Initialize Component

<#Write("    ");#>// Stop Init Timer
<#Write("    ");#>initOneShotTimer.stop();
}<# if (hpp.subscribers.Count > 0) { #>
	<# foreach (var sub in hpp.subscribers) { #> 
// OnOneData Subscription handler for <#Write(sub.name);#> subscriber 
void <#Write(hpp.comp_name);#>::OnOneData(const <#Write(hpp.project_name);#>::<#Write(sub.topic);#>::ConstPtr& received_data)
{
<#Write("    ");#>// Business Logic for <#Write(sub.name);#> subscriber callback 
}<# } #>
<# } #><# if (hpp.provided_services.Count > 0) { #>
	<# foreach (var provided in hpp.provided_services) { #> 
// Component Service Callback
bool <#Write(hpp.comp_name);#>::ComponentServiceCallback(<#Write(hpp.project_name);#>::<#Write(provided.name);#>::Request  &req,
<# for (int i=0; i<=hpp.comp_name.Length; i++) #> <#Write(" ");#>
<#Write("                              ");#><#Write(hpp.project_name);#>::<#Write(provided.name);#>::Response &res);
{
<#Write("    ");#>// Business Logic for <#Write(provided.name);#> Service
}<# } #>
<# } #> 
<# if (hpp.timers.Count > 0) { #>
	<# foreach (var timer in hpp.timers) { #> 
// Callback for <#Write(timer.name);#> timer
void <#Write(hpp.comp_name);#>::<#Write(timer.name);#>Callback(const ros::TimerEvent& event)
{
<#Write("    ");#>// Business Logic for <#Write(timer.name);#> 
}<# } #>
<# } #> 