#unicode utf8
#ifndef LOGGER_HPP
#define LOGGER_HPP

$hash_include <iostream>
$hash_include <fstream>
$hash_include <string>
$hash_include <sstream>
$hash_include <chrono>

using namespace std;

class Logger 
{

public:
    // Writes log_content to log file & empties log_content
    ~Logger();

    // Create log file
    bool CREATE_FILE(const string target_log_path);

    // Write log contents to file
    bool WRITE_TO_FILE();

    // Check size of log_contents
    bool CHECK_LOG_SIZE();

    // Create a debug log entry
    bool DEBUG(string text);

    // Create an error log entry
    bool ERROR(string text);

    // Get log entry size
    int SIZE_OF_LOG();

    // Get Current Clock Value
    string CLOCK_VALUE();

private:
    // String representing the contents of log
    string log_content;

    // Max size of log_content before contents are written to file
    const int max_log_unit = 1000;

    // Log file stream
    ofstream log_stream;

    // Absolute path of log file
    string log_path;

    // High Resolution Clock
    chrono::high_resolution_clock clock;
};

#endif