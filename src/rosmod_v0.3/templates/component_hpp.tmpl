#ifndef ${define_guard}_HPP
#define ${define_guard}_HPP

$hash_include "ros/ros.h"
$hash_include "Component.hpp"
#for $topic in $topics
$hash_include "$topic[0]/${topic[1]}.h"
#end for
#for $service in $services
$hash_include "$service[0]/${service[1]}.h"
#end for

#if $component_type == 'KSP'
$hash_include "krpci/krpci.hpp"
#end if

#if $user_includes == ""
//# Start User Includes Marker
//# End User Includes Marker
#else
//# Start User Includes Marker
$user_includes//# End User Includes Marker
#end if

#if $hpp_globals == ""
//# Start User Globals Marker
//# End User Globals Marker
#else
//# Start User Globals Marker
$hpp_globals//# End User Globals Marker
#end if

class $component_name : public Component
{
public:
  // Constructor
  ${component_name}(ComponentConfig& config, int argc, char **argv) : Component(config, argc, argv) {}

  // Initialization
  void Init(const ros::TimerEvent& event);

#if $len($subscribers) > 0
#for $sub in $subscribers
  // Subscriber Callback - $sub.properties["name"]
  void ${sub.properties["name"]}_OnOneData(const $sub.properties["message_reference"].parent.properties["name"]::${sub.properties["message_reference"].properties["name"]}::ConstPtr& received_data); 
 
#end for
#end if
#if $len($provided_services) > 0
#for $server in $servers
  // Server Callback - $server.properties["name"]
  bool ${server.properties["service_reference"].properties["name"]}Callback($server.properties["service_reference"].parent.properties["name"]::$server.properties["service_reference"].properties["name"]::Request &req, 
    $server.properties["service_reference"].parent.properties["name"]::$server.properties["service_reference"].properties["name"]::Response &res);

#end for
#end if	
#if $len($timers) > 0
#for $timer in $timers
  // Timer Callback - $timer.properties["name"]
  void ${timer.properties["name"]}Callback(const ros::TimerEvent& event);

#end for
#end if
  // Start up
  void startUp();

  // Destructor
  ~${component_name}();

private:

#if $len($timers) > 0
#for $timer in $timers
  // Timer
  ros::Timer $timer.properties["name"];

#end for
#end if
#if $len($subscribers) > 0
#for $sub in $subscribers
  // Subscriber
  ros::Subscriber $sub.properties["name"]; 

#end for
#end if
#if $len($publishers) > 0
#for $pub in $publishers
  // Publisher 
  ros::Publisher $pub.properties["name"];

#end for
#end if
#if $len($provided_services) > 0
#for $server in $servers
  // Server 
  ros::ServiceServer ${server.properties["name"]};

#end for
#end if
#if $len($required_services) > 0
#for $client in $clients
  // Client 
  ros::ServiceClient $client.properties["name"];

#end for
#end if
#if $user_private_variables == ""
  //# Start User Private Variables Marker
  //# End User Private Variables Marker
#else
  //# Start User Private Variables Marker
$user_private_variables  //# End User Private Variables Marker
	#end if
};

#endif
