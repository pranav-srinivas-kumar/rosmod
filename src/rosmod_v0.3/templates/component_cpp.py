#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
try:
    import builtins as builtin
except ImportError:
    import __builtin__ as builtin
from os.path import getmtime, exists
import time
import types
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import *
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers

##################################################
## MODULE CONSTANTS
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.4.4'
__CHEETAH_versionTuple__ = (2, 4, 4, 'development', 0)
__CHEETAH_genTime__ = 1441394769.796252
__CHEETAH_genTimestamp__ = 'Fri Sep  4 14:26:09 2015'
__CHEETAH_src__ = '/home/jeb/Repositories/rosmod-gui/src/rosmod_v0.3/templates/component_cpp.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Sep  2 16:50:45 2015'
__CHEETAH_docstring__ = 'Autogenerated by Cheetah: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class component_cpp(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        super(component_cpp, self).__init__(*args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        _v = VFSL([locals()]+SL+[globals(), builtin],"hash_include",True) # u'$hash_include' on line 1, col 1
        if _v is not None: write(_filter(_v, rawExpr=u'$hash_include')) # from line 1, col 1.
        write(u''' "''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"package_name",True) # u'$package_name' on line 1, col 16
        if _v is not None: write(_filter(_v, rawExpr=u'$package_name')) # from line 1, col 16.
        write(u'''/''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'${component_name}' on line 1, col 30
        if _v is not None: write(_filter(_v, rawExpr=u'${component_name}')) # from line 1, col 30.
        write(u'''.hpp"

''')
        if VFSL([locals()]+SL+[globals(), builtin],"component_type",True) == "KSP": # generated from line 3, col 1
            write(u'''KRPCI krpci_client;
''')
        write(u'''
''')
        if VFSL([locals()]+SL+[globals(), builtin],"user_globals",True) == "": # generated from line 7, col 1
            write(u'''//# Start User Globals Marker
//# End User Globals Marker
''')
        else: # generated from line 10, col 1
            write(u'''//# Start User Globals Marker
''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"user_globals",True) # u'$user_globals' on line 12, col 1
            if _v is not None: write(_filter(_v, rawExpr=u'$user_globals')) # from line 12, col 1.
            write(u'''//# End User Globals Marker
''')
        write(u'''
// Initialization Function
''')
        if VFSL([locals()]+SL+[globals(), builtin],"init_business_logic",True) == "": # generated from line 16, col 1
            write(u'''//# Start Init Marker
void ''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 18, col 6
            if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 18, col 6.
            write(u'''::Init(const ros''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 18, col 37
            if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 18, col 37.
            write(u'''::TimerEvent& event)
{
''')
            if VFSL([locals()]+SL+[globals(), builtin],"mod",True) != "": # generated from line 20, col 1
                write(u'''  compQueue.ROSMOD_LOGGER.DEBUG("Entering ''')
                _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 21, col 43
                if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 21, col 43.
                write(u'''::Init");
''')
            write(u'''  // Initialize Here

''')
            if VFSL([locals()]+SL+[globals(), builtin],"trafficGen",True): # generated from line 25, col 1
                write(u'''  srand (time(NULL));
  double tg_duration = -1;
  std::string fName;
  for (int i=0; i<node_argc; i++)
    {
      if (!strcmp(node_argv[i], "--tg_time"))
\t{
\t  tg_duration = atof(node_argv[i+1]);
\t}
    }
''')
                if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"subscribers",True)) > 0: # generated from line 36, col 1
                    write(u'''  uint64_t capacityBits = 400000;
  bool enable_sendback = true;
  for (int i=0; i<node_argc; i++)
    {
      if (!strcmp(node_argv[i], "--buffer_capacity_bits"))
\t{
\t  capacityBits = atoi(node_argv[i+1]);
\t}
      if (!strcmp(node_argv[i], "--buffer_capacity_bytes"))
\t{
\t  capacityBits = atoi(node_argv[i+1]) * 8;
\t}
      if (!strcmp(node_argv[i], "--disable_sendback"))
\t{
\t  enable_sendback = false;
\t}
    }
''')
                    for sub in VFSL([locals()]+SL+[globals(), builtin],"subscribers",True): # generated from line 54, col 1
                        write(u'''  if (config.profileMap.find("''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"$sub.properties['name']" on line 55, col 31
                        if _v is not None: write(_filter(_v, rawExpr=u"$sub.properties['name']")) # from line 55, col 31.
                        write(u'''") != config.profileMap.end())
    {
      ''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"${sub.properties['name']}" on line 57, col 7
                        if _v is not None: write(_filter(_v, rawExpr=u"${sub.properties['name']}")) # from line 57, col 7.
                        write(u'''_recv_mw.init(node_argc,
\t\t\t\t\t     node_argv,
\t\t\t\t\t     config.profileMap["''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"$sub.properties['name']" on line 59, col 30
                        if _v is not None: write(_filter(_v, rawExpr=u"$sub.properties['name']")) # from line 59, col 30.
                        write(u'''"],
\t\t\t\t\t     capacityBits);
      if ( tg_duration < 0 )
\t''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"${sub.properties['name']}" on line 62, col 2
                        if _v is not None: write(_filter(_v, rawExpr=u"${sub.properties['name']}")) # from line 62, col 2.
                        write(u'''_recv_mw.set_duration(''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"${sub.properties['name']}" on line 62, col 49
                        if _v is not None: write(_filter(_v, rawExpr=u"${sub.properties['name']}")) # from line 62, col 49.
                        write(u'''_recv_mw.profile.period);
      else
\t''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"${sub.properties['name']}" on line 64, col 2
                        if _v is not None: write(_filter(_v, rawExpr=u"${sub.properties['name']}")) # from line 64, col 2.
                        write(u'''_recv_mw.set_duration(tg_duration);
      fName = nodeName + "." + compName + ".''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"${sub.properties['name']}" on line 65, col 45
                        if _v is not None: write(_filter(_v, rawExpr=u"${sub.properties['name']}")) # from line 65, col 45.
                        write(u'''.network.csv";
      ''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"${sub.properties['name']}" on line 66, col 7
                        if _v is not None: write(_filter(_v, rawExpr=u"${sub.properties['name']}")) # from line 66, col 7.
                        write(u'''_recv_mw.set_enable_sendback(enable_sendback);
      ''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"${sub.properties['name']}" on line 67, col 7
                        if _v is not None: write(_filter(_v, rawExpr=u"${sub.properties['name']}")) # from line 67, col 7.
                        write(u'''_recv_mw.set_output_filename(fName);
      ''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"${sub.properties['name']}" on line 68, col 7
                        if _v is not None: write(_filter(_v, rawExpr=u"${sub.properties['name']}")) # from line 68, col 7.
                        write(u'''_recv_mw.set_recv_done_callback(boost::bind(&''')
                        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 68, col 77
                        if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 68, col 77.
                        write(u'''::mw_recv_done_callback, this, &''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"${sub.properties['name']}" on line 68, col 124
                        if _v is not None: write(_filter(_v, rawExpr=u"${sub.properties['name']}")) # from line 68, col 124.
                        write(u'''_recv_mw));
      ''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"${sub.properties['name']}" on line 69, col 7
                        if _v is not None: write(_filter(_v, rawExpr=u"${sub.properties['name']}")) # from line 69, col 7.
                        write(u'''_id = 0;
    }
  if (config.portSenderMap.find("''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"$sub.properties['name']" on line 71, col 34
                        if _v is not None: write(_filter(_v, rawExpr=u"$sub.properties['name']")) # from line 71, col 34.
                        write(u'''") != config.portSenderMap.end())
    {
      for (auto it=config.portSenderMap["''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"$sub.properties['name']" on line 73, col 42
                        if _v is not None: write(_filter(_v, rawExpr=u"$sub.properties['name']")) # from line 73, col 42.
                        write(u'''"].begin();
\t   it != config.portSenderMap["''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"$sub.properties['name']" on line 74, col 33
                        if _v is not None: write(_filter(_v, rawExpr=u"$sub.properties['name']")) # from line 74, col 33.
                        write(u'''"].end(); ++it)
\t{
\t  ''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"${sub.properties['name']}" on line 76, col 4
                        if _v is not None: write(_filter(_v, rawExpr=u"${sub.properties['name']}")) # from line 76, col 4.
                        write(u'''_recv_mw.add_sender( it->first, it->second );
\t}
    }
  
''')
                if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"publishers",True)) > 0: # generated from line 82, col 1
                    write(u'''  max_data_length = 8192;
  tg_misbehave = false;
  for (int i=0; i<node_argc; i++)
    {
      if (!strcmp(node_argv[i], "--max_data_length_bytes"))
\t{
\t  max_data_length = atoi(node_argv[i+1]);
\t}
      if (!strcmp(node_argv[i], "--max_data_length_bits"))
\t{
\t  max_data_length = atoi(node_argv[i+1]) / 8;
\t}
      if (!strcmp(node_argv[i], "--tg_misbehave"))
\t{
\t  tg_misbehave = true;
\t}
    }
  ros::NodeHandle nh;
  ros::TimerOptions timer_options;
''')
                    for pub in VFSL([locals()]+SL+[globals(), builtin],"publishers",True): # generated from line 102, col 1
                        write(u'''  if (config.profileMap.find("''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"$pub.properties['name']" on line 103, col 31
                        if _v is not None: write(_filter(_v, rawExpr=u"$pub.properties['name']")) # from line 103, col 31.
                        write(u'''") != config.profileMap.end())
    {
      ''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"${pub.properties['name']}" on line 105, col 7
                        if _v is not None: write(_filter(_v, rawExpr=u"${pub.properties['name']}")) # from line 105, col 7.
                        write(u'''_send_mw.init(node_argc,
\t\t\t\t\t     node_argv,
\t\t\t\t\t     config.uuidMap["''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"$pub.properties['name']" on line 107, col 27
                        if _v is not None: write(_filter(_v, rawExpr=u"$pub.properties['name']")) # from line 107, col 27.
                        write(u'''"],
\t\t\t\t\t     config.profileMap["''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"$pub.properties['name']" on line 108, col 30
                        if _v is not None: write(_filter(_v, rawExpr=u"$pub.properties['name']")) # from line 108, col 30.
                        write(u'''"]);
      if ( tg_duration < 0 )
\t''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"${pub.properties['name']}" on line 110, col 2
                        if _v is not None: write(_filter(_v, rawExpr=u"${pub.properties['name']}")) # from line 110, col 2.
                        write(u'''_send_mw.set_duration(''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"${pub.properties['name']}" on line 110, col 49
                        if _v is not None: write(_filter(_v, rawExpr=u"${pub.properties['name']}")) # from line 110, col 49.
                        write(u'''_send_mw.profile.period);
      else
\t''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"${pub.properties['name']}" on line 112, col 2
                        if _v is not None: write(_filter(_v, rawExpr=u"${pub.properties['name']}")) # from line 112, col 2.
                        write(u'''_send_mw.set_duration(tg_duration);
      fName = nodeName + "." + compName + ".''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"${pub.properties['name']}" on line 113, col 45
                        if _v is not None: write(_filter(_v, rawExpr=u"${pub.properties['name']}")) # from line 113, col 45.
                        write(u'''.network.csv";
      ''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"${pub.properties['name']}" on line 114, col 7
                        if _v is not None: write(_filter(_v, rawExpr=u"${pub.properties['name']}")) # from line 114, col 7.
                        write(u'''_send_mw.set_output_filename(fName);

      timer_options = 
\tros::TimerOptions
\t(ros::Duration(-1),
\t boost::bind(&''')
                        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 119, col 16
                        if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 119, col 16.
                        write(u'''::''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"${pub.properties['name']}" on line 119, col 33
                        if _v is not None: write(_filter(_v, rawExpr=u"${pub.properties['name']}")) # from line 119, col 33.
                        write(u'''_timerCallback, this, _1),
\t &this->compQueue,
\t true);
      ''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"${pub.properties['name']}" on line 122, col 7
                        if _v is not None: write(_filter(_v, rawExpr=u"${pub.properties['name']}")) # from line 122, col 7.
                        write(u'''_timer = nh.createTimer(timer_options);
    }
''')
            write(u'''  // Stop Init Timer
  initOneShotTimer.stop();
''')
            if VFSL([locals()]+SL+[globals(), builtin],"mod",True) != "": # generated from line 129, col 1
                write(u'''  compQueue.ROSMOD_LOGGER.DEBUG("Exiting ''')
                _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 130, col 42
                if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 130, col 42.
                write(u'''::Init");
''')
            write(u'''}
//# End Init Marker
''')
        else: # generated from line 134, col 1
            write(u'''//# Start Init Marker
''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"init_business_logic",True) # u'$init_business_logic' on line 136, col 1
            if _v is not None: write(_filter(_v, rawExpr=u'$init_business_logic')) # from line 136, col 1.
            write(u'''//# End Init Marker
''')
        write(u'''

''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"publishers",True)) > 0: # generated from line 140, col 1
            for pub in VFSL([locals()]+SL+[globals(), builtin],"publishers",True): # generated from line 141, col 1
                write(u'''void ''')
                _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 142, col 6
                if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 142, col 6.
                write(u'''::''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"${pub.properties['name']}" on line 142, col 23
                if _v is not None: write(_filter(_v, rawExpr=u"${pub.properties['name']}")) # from line 142, col 23.
                write(u'''_timerCallback(const ros::TimerEvent& event)
{
  ''')
                _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["message_reference"],"parent",True),"properties",True)["name"] # u'$pub.properties["message_reference"].parent.properties["name"]' on line 144, col 3
                if _v is not None: write(_filter(_v, rawExpr=u'$pub.properties["message_reference"].parent.properties["name"]')) # from line 144, col 3.
                write(u'''::''')
                _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["message_reference"],"properties",True)["name"] # u'${pub.properties["message_reference"].properties["name"]}' on line 144, col 67
                if _v is not None: write(_filter(_v, rawExpr=u'${pub.properties["message_reference"].properties["name"]}')) # from line 144, col 67.
                write(u''' msg;
  msg.uuid = ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"${pub.properties['name']}" on line 145, col 14
                if _v is not None: write(_filter(_v, rawExpr=u"${pub.properties['name']}")) # from line 145, col 14.
                write(u'''_send_mw.get_uuid();
  msg.bytes.resize(max_data_length,0);
  double timerDelay = 0;
  try
    {
      timerDelay =
\t''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"${pub.properties['name']}" on line 151, col 2
                if _v is not None: write(_filter(_v, rawExpr=u"${pub.properties['name']}")) # from line 151, col 2.
                write(u'''_send_mw.send<''')
                _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["message_reference"],"parent",True),"properties",True)["name"] # u'$pub.properties["message_reference"].parent.properties["name"]' on line 151, col 41
                if _v is not None: write(_filter(_v, rawExpr=u'$pub.properties["message_reference"].parent.properties["name"]')) # from line 151, col 41.
                write(u'''::''')
                _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["message_reference"],"properties",True)["name"] # u'${pub.properties["message_reference"].properties["name"]}' on line 151, col 105
                if _v is not None: write(_filter(_v, rawExpr=u'${pub.properties["message_reference"].properties["name"]}')) # from line 151, col 105.
                write(u'''>(''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"$pub.properties['name']" on line 151, col 164
                if _v is not None: write(_filter(_v, rawExpr=u"$pub.properties['name']")) # from line 151, col 164.
                write(u''', msg);
    }
  catch ( Network::Exceeded_Production_Profile& ex )
    {
      LOGGER.DEBUG("Prevented from sending on the network!");
    }

  if ( ros::Time::now() >= ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"${pub.properties['name']}" on line 158, col 28
                if _v is not None: write(_filter(_v, rawExpr=u"${pub.properties['name']}")) # from line 158, col 28.
                write(u'''_send_mw.get_end_time() )
    {
      LOGGER.DEBUG("writing output\\n");
      ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"${pub.properties['name']}" on line 161, col 7
                if _v is not None: write(_filter(_v, rawExpr=u"${pub.properties['name']}")) # from line 161, col 7.
                write(u'''_send_mw.record();
    }
  else
    {
      if (tg_misbehave)
\ttimerDelay -= 0.1;
      ros::TimerOptions timer_options;
      timer_options = 
\tros::TimerOptions
\t(ros::Duration(timerDelay),
\t boost::bind(&''')
                _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 171, col 16
                if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 171, col 16.
                write(u'''::''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"${pub.properties['name']}" on line 171, col 33
                if _v is not None: write(_filter(_v, rawExpr=u"${pub.properties['name']}")) # from line 171, col 33.
                write(u'''_timerCallback, this, _1),
\t &this->compQueue,
\t true);
      ros::NodeHandle nh;
      ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)['name'] # u"${pub.properties['name']}" on line 175, col 7
                if _v is not None: write(_filter(_v, rawExpr=u"${pub.properties['name']}")) # from line 175, col 7.
                write(u'''_timer = nh.createTimer(timer_options);
    }
}
''')
        write(u'''
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"subscribers",True)) > 0: # generated from line 181, col 1
            if VFSL([locals()]+SL+[globals(), builtin],"trafficGen",True): # generated from line 182, col 1
                write(u'''void ''')
                _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 183, col 6
                if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 183, col 6.
                write(u'''::mw_recv_done_callback(Network::receiver* receiver_mw)
{
  LOGGER.DEBUG("Writing middleware log.");
  LOGGER.DEBUG("Max middleware buffer: %lu bits", receiver_mw->buffer.maxBits());
  receiver_mw->record();
}
''')
            write(u'''
''')
            for sub in VFSL([locals()]+SL+[globals(), builtin],"subscribers",True): # generated from line 191, col 1
                write(u'''// Subscriber Callback - ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 192, col 26
                if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 192, col 26.
                write(u'''
''')
                if VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["business_logic"] == "": # generated from line 193, col 1
                    write(u'''//# Start ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 194, col 11
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 194, col 11.
                    write(u'''_OnOneData Marker
void ''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 195, col 6
                    if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 195, col 6.
                    write(u'''::''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 195, col 23
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 195, col 23.
                    write(u'''_OnOneData(const ''')
                    _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["message_reference"],"parent",True),"properties",True)["name"] # u'$sub.properties["message_reference"].parent.properties["name"]' on line 195, col 65
                    if _v is not None: write(_filter(_v, rawExpr=u'$sub.properties["message_reference"].parent.properties["name"]')) # from line 195, col 65.
                    write(u'''::''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["message_reference"],"properties",True)["name"] # u'${sub.properties["message_reference"].properties["name"]}' on line 195, col 129
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["message_reference"].properties["name"]}')) # from line 195, col 129.
                    write(u'''::ConstPtr& received_data)
{
''')
                    if VFSL([locals()]+SL+[globals(), builtin],"mod",True) != "": # generated from line 197, col 1
                        write(u'''  compQueue.ROSMOD_LOGGER.DEBUG("Entering ''')
                        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 198, col 43
                        if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 198, col 43.
                        write(u'''::''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 198, col 60
                        if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 198, col 60.
                        write(u'''_OnOneData");
''')
                    write(u'''  // Business Logic for ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'$sub.properties["name"]' on line 200, col 25
                    if _v is not None: write(_filter(_v, rawExpr=u'$sub.properties["name"]')) # from line 200, col 25.
                    write(u''' Subscriber

''')
                    if VFSL([locals()]+SL+[globals(), builtin],"trafficGen",True): # generated from line 202, col 1
                        write(u'''  uint64_t uuid = received_data->uuid;
  uint64_t msgBytes = ros::serialization::Serializer<''')
                        _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["message_reference"],"parent",True),"properties",True)["name"] # u'$sub.properties["message_reference"].parent.properties["name"]' on line 204, col 54
                        if _v is not None: write(_filter(_v, rawExpr=u'$sub.properties["message_reference"].parent.properties["name"]')) # from line 204, col 54.
                        write(u'''::''')
                        _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["message_reference"],"properties",True)["name"] # u'${sub.properties["message_reference"].properties["name"]}' on line 204, col 118
                        if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["message_reference"].properties["name"]}')) # from line 204, col 118.
                        write(u'''>::serializedLength(*received_data);
  ros::Time now = ros::Time::now();
  ''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"${sub.properties['name']}" on line 206, col 3
                        if _v is not None: write(_filter(_v, rawExpr=u"${sub.properties['name']}")) # from line 206, col 3.
                        write(u'''_recv_mw.update_sender_stream(uuid, now, msgBytes * 8);
  Network::Message new_msg;
  new_msg.Bytes(msgBytes);
  new_msg.Id(''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"${sub.properties['name']}" on line 209, col 14
                        if _v is not None: write(_filter(_v, rawExpr=u"${sub.properties['name']}")) # from line 209, col 14.
                        write(u'''_id++);
  new_msg.TimeStamp();
  ''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"${sub.properties['name']}" on line 211, col 3
                        if _v is not None: write(_filter(_v, rawExpr=u"${sub.properties['name']}")) # from line 211, col 3.
                        write(u'''_recv_mw.buffer.send(new_msg, msgBytes * 8);
''')
                    write(u'''  
''')
                    if VFSL([locals()]+SL+[globals(), builtin],"mod",True) != "": # generated from line 214, col 1
                        write(u'''  compQueue.ROSMOD_LOGGER.DEBUG("Exiting ''')
                        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 215, col 42
                        if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 215, col 42.
                        write(u'''::''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 215, col 59
                        if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 215, col 59.
                        write(u'''_OnOneData");
''')
                    write(u'''}
//# End ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 218, col 9
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 218, col 9.
                    write(u'''_OnOneData Marker
''')
                else: # generated from line 219, col 1
                    write(u'''//# Start ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 220, col 11
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 220, col 11.
                    write(u'''_OnOneData Marker
''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["business_logic"] # u'$sub.properties["business_logic"]' on line 221, col 1
                    if _v is not None: write(_filter(_v, rawExpr=u'$sub.properties["business_logic"]')) # from line 221, col 1.
                    write(u'''//# End ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 221, col 42
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 221, col 42.
                    write(u'''_OnOneData Marker
''')
            write(u'''
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"provided_services",True)) > 0: # generated from line 226, col 1
            for server in VFSL([locals()]+SL+[globals(), builtin],"servers",True): # generated from line 227, col 1
                write(u'''// Server Callback - ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'$server.properties["name"]' on line 228, col 22
                if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["name"]')) # from line 228, col 22.
                write(u'''
''')
                if VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["business_logic"] == "": # generated from line 229, col 1
                    write(u'''//# Start ''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'${server.properties["service_reference"].properties["name"]}' on line 230, col 11
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["service_reference"].properties["name"]}')) # from line 230, col 11.
                    write(u'''Callback Marker
bool ''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 231, col 6
                    if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 231, col 6.
                    write(u'''::''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'${server.properties["service_reference"].properties["name"]}' on line 231, col 23
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["service_reference"].properties["name"]}')) # from line 231, col 23.
                    write(u'''Callback(''')
                    _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"parent",True),"properties",True)["name"] # u'$server.properties["service_reference"].parent.properties["name"]' on line 231, col 92
                    if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["service_reference"].parent.properties["name"]')) # from line 231, col 92.
                    write(u'''::''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'$server.properties["service_reference"].properties["name"]' on line 231, col 159
                    if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["service_reference"].properties["name"]')) # from line 231, col 159.
                    write(u'''::Request  &req,
  ''')
                    _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"parent",True),"properties",True)["name"] # u'$server.properties["service_reference"].parent.properties["name"]' on line 232, col 3
                    if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["service_reference"].parent.properties["name"]')) # from line 232, col 3.
                    write(u'''::''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'$server.properties["service_reference"].properties["name"]' on line 232, col 70
                    if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["service_reference"].properties["name"]')) # from line 232, col 70.
                    write(u'''::Response &res)
{
''')
                    if VFSL([locals()]+SL+[globals(), builtin],"mod",True) != "": # generated from line 234, col 1
                        write(u'''  compQueue.ROSMOD_LOGGER.DEBUG("Entering ''')
                        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 235, col 43
                        if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 235, col 43.
                        write(u'''::''')
                        _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'${server.properties["service_reference"].properties["name"]}' on line 235, col 60
                        if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["service_reference"].properties["name"]}')) # from line 235, col 60.
                        write(u'''Callback");
''')
                    write(u'''  // Business Logic for ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'$server.properties["name"]' on line 237, col 25
                    if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["name"]')) # from line 237, col 25.
                    write(u''' Server

''')
                    if VFSL([locals()]+SL+[globals(), builtin],"mod",True) != "": # generated from line 239, col 1
                        write(u'''  compQueue.ROSMOD_LOGGER.DEBUG("Exiting ''')
                        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 240, col 42
                        if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 240, col 42.
                        write(u'''::''')
                        _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'${server.properties["service_reference"].properties["name"]}' on line 240, col 59
                        if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["service_reference"].properties["name"]}')) # from line 240, col 59.
                        write(u'''Callback");
''')
                    write(u'''  return true;
}
//# End ''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'${server.properties["service_reference"].properties["name"]}' on line 244, col 9
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["service_reference"].properties["name"]}')) # from line 244, col 9.
                    write(u'''Callback Marker
''')
                else: # generated from line 245, col 1
                    write(u'''//# Start ''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'${server.properties["service_reference"].properties["name"]}' on line 246, col 11
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["service_reference"].properties["name"]}')) # from line 246, col 11.
                    write(u'''Callback Marker
''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["business_logic"] # u'$server.properties["business_logic"]' on line 247, col 1
                    if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["business_logic"]')) # from line 247, col 1.
                    write(u'''//# End ''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'${server.properties["service_reference"].properties["name"]}' on line 247, col 45
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["service_reference"].properties["name"]}')) # from line 247, col 45.
                    write(u'''Callback Marker
''')
            write(u'''
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"timers",True)) > 0: # generated from line 252, col 1
            for timer in VFSL([locals()]+SL+[globals(), builtin],"timers",True): # generated from line 253, col 1
                write(u'''// Timer Callback - ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'$timer.properties["name"]' on line 254, col 21
                if _v is not None: write(_filter(_v, rawExpr=u'$timer.properties["name"]')) # from line 254, col 21.
                write(u'''
''')
                if VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["business_logic"] == "": # generated from line 255, col 1
                    write(u'''//# Start ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 256, col 11
                    if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 256, col 11.
                    write(u'''Callback Marker
void ''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 257, col 6
                    if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 257, col 6.
                    write(u'''::''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 257, col 23
                    if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 257, col 23.
                    write(u'''Callback(const ros''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 257, col 68
                    if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 257, col 68.
                    write(u'''::TimerEvent& event)
{
''')
                    if VFSL([locals()]+SL+[globals(), builtin],"mod",True) != "": # generated from line 259, col 1
                        write(u'''  compQueue.ROSMOD_LOGGER.DEBUG("Entering ''')
                        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 260, col 43
                        if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 260, col 43.
                        write(u'''::''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 260, col 60
                        if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 260, col 60.
                        write(u'''Callback");
''')
                    write(u'''  // Business Logic for ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'$timer.properties["name"]' on line 262, col 25
                    if _v is not None: write(_filter(_v, rawExpr=u'$timer.properties["name"]')) # from line 262, col 25.
                    write(u''' Timer

''')
                    if VFSL([locals()]+SL+[globals(), builtin],"mod",True) != "": # generated from line 264, col 1
                        write(u'''  compQueue.ROSMOD_LOGGER.DEBUG("Exiting ''')
                        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 265, col 42
                        if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 265, col 42.
                        write(u'''::''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 265, col 59
                        if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 265, col 59.
                        write(u'''Callback");
''')
                    write(u'''}
//# End ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 268, col 9
                    if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 268, col 9.
                    write(u'''Callback Marker
''')
                else: # generated from line 269, col 1
                    write(u'''//# Start ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 270, col 11
                    if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 270, col 11.
                    write(u'''Callback Marker
''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["business_logic"] # u'$timer.properties["business_logic"]' on line 271, col 1
                    if _v is not None: write(_filter(_v, rawExpr=u'$timer.properties["business_logic"]')) # from line 271, col 1.
                    write(u'''//# End ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 271, col 44
                    if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 271, col 44.
                    write(u'''Callback Marker
''')
            write(u'''
''')
        write(u'''
// Destructor - Cleanup Ports & Timers
''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 278, col 1
        if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 278, col 1.
        write(u'''::~''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'${component_name}' on line 278, col 19
        if _v is not None: write(_filter(_v, rawExpr=u'${component_name}')) # from line 278, col 19.
        write(u'''()
{
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"timers",True)) > 0: # generated from line 280, col 1
            for timer in VFSL([locals()]+SL+[globals(), builtin],"timers",True): # generated from line 281, col 1
                write(u'''  ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 282, col 3
                if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 282, col 3.
                write(u'''.stop();
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"publishers",True)) > 0: # generated from line 285, col 1
            for pub in VFSL([locals()]+SL+[globals(), builtin],"publishers",True): # generated from line 286, col 1
                write(u'''  ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["name"] # u'${pub.properties["name"]}' on line 287, col 3
                if _v is not None: write(_filter(_v, rawExpr=u'${pub.properties["name"]}')) # from line 287, col 3.
                write(u'''.shutdown();
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"subscribers",True)) > 0: # generated from line 290, col 1
            for sub in VFSL([locals()]+SL+[globals(), builtin],"subscribers",True): # generated from line 291, col 1
                write(u'''  ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 292, col 3
                if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 292, col 3.
                write(u'''.shutdown();
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"provided_services",True)) > 0: # generated from line 295, col 1
            for server in VFSL([locals()]+SL+[globals(), builtin],"servers",True): # generated from line 296, col 1
                write(u'''  ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'${server.properties["name"]}' on line 297, col 3
                if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["name"]}')) # from line 297, col 3.
                write(u'''.shutdown();
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"required_services",True)) > 0: # generated from line 300, col 1
            for client in VFSL([locals()]+SL+[globals(), builtin],"clients",True): # generated from line 301, col 1
                write(u'''  ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"client",True),"properties",True)["name"] # u'${client.properties["name"]}' on line 302, col 3
                if _v is not None: write(_filter(_v, rawExpr=u'${client.properties["name"]}')) # from line 302, col 3.
                write(u'''.shutdown();
''')
        if VFSL([locals()]+SL+[globals(), builtin],"destructor",True) == "": # generated from line 305, col 1
            write(u'''  //# Start Destructor Marker
  //# End Destructor Marker
''')
        else: # generated from line 308, col 1
            write(u'''  //# Start Destructor Marker
''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"destructor",True) # u'$destructor' on line 310, col 1
            if _v is not None: write(_filter(_v, rawExpr=u'$destructor')) # from line 310, col 1.
            write(u'''  //# End Destructor Marker
''')
        write(u'''}

// Startup - Setup Component Ports & Timers
void ''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 315, col 6
        if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 315, col 6.
        write(u'''::startUp()
{
  ros''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 317, col 6
        if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 317, col 6.
        write(u'''::NodeHandle nh;
  std::string advertiseName;

  // Scheduling Scheme is FIFO
''')
        if VFSL([locals()]+SL+[globals(), builtin],"mod",True) != "": # generated from line 321, col 1
            write(u'''  this->compQueue.scheduling_scheme = scheduling_scheme;
  rosmod::ROSMOD_Callback_Options callback_options;
''')
        write(u'''
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"subscribers",True)) > 0: # generated from line 326, col 1
            for sub in VFSL([locals()]+SL+[globals(), builtin],"subscribers",True): # generated from line 327, col 1
                if VFSL([locals()]+SL+[globals(), builtin],"mod",True) != "": # generated from line 328, col 1
                    write(u'''  callback_options.alias = "''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 329, col 29
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 329, col 29.
                    write(u'''_OnOneData";
  callback_options.priority = ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["priority"] # u'$sub.properties["priority"]' on line 330, col 31
                    if _v is not None: write(_filter(_v, rawExpr=u'$sub.properties["priority"]')) # from line 330, col 31.
                    write(u''';
  callback_options.deadline.sec = ''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"int",False)(sub.properties["deadline"].split('.')[0]) # u'${int(sub.properties["deadline"].split(\'.\')[0])}' on line 331, col 35
                    if _v is not None: write(_filter(_v, rawExpr=u'${int(sub.properties["deadline"].split(\'.\')[0])}')) # from line 331, col 35.
                    write(u''';
  callback_options.deadline.nsec = ''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"int",False)(float('0.' + (sub.properties["deadline"].split('.')[1]))*1000000000) # u'${int(float(\'0.\' + (sub.properties["deadline"].split(\'.\')[1]))*1000000000)}' on line 332, col 36
                    if _v is not None: write(_filter(_v, rawExpr=u'${int(float(\'0.\' + (sub.properties["deadline"].split(\'.\')[1]))*1000000000)}')) # from line 332, col 36.
                    write(u''';
''')
                write(u'''  // Component Subscriber - ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'$sub.properties["name"]' on line 334, col 29
                if _v is not None: write(_filter(_v, rawExpr=u'$sub.properties["name"]')) # from line 334, col 29.
                write(u'''
  advertiseName = "''')
                _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["message_reference"],"properties",True)["name"] # u'${sub.properties["message_reference"].properties["name"]}' on line 335, col 20
                if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["message_reference"].properties["name"]}')) # from line 335, col 20.
                write(u'''";
  if (portGroupMap.find("''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'$sub.properties["name"]' on line 336, col 26
                if _v is not None: write(_filter(_v, rawExpr=u'$sub.properties["name"]')) # from line 336, col 26.
                write(u'''") != portGroupMap.end())
    advertiseName += "_" + portGroupMap["''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"${sub.properties['name']}" on line 337, col 42
                if _v is not None: write(_filter(_v, rawExpr=u"${sub.properties['name']}")) # from line 337, col 42.
                write(u'''"];
  ros''')
                _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 338, col 6
                if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 338, col 6.
                write(u'''::SubscribeOptions ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 338, col 31
                if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 338, col 31.
                write(u'''_options;
''')
                if VFSL([locals()]+SL+[globals(), builtin],"mod",True) != "": # generated from line 339, col 1
                    write(u'''  ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 340, col 3
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 340, col 3.
                    write(u'''_options = ros''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 340, col 42
                    if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 340, col 42.
                    write(u'''::SubscribeOptions::create<''')
                    _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["message_reference"],"parent",True),"properties",True)["name"] # u'$sub.properties["message_reference"].parent.properties["name"]' on line 340, col 75
                    if _v is not None: write(_filter(_v, rawExpr=u'$sub.properties["message_reference"].parent.properties["name"]')) # from line 340, col 75.
                    write(u'''::''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["message_reference"],"properties",True)["name"] # u'${sub.properties["message_reference"].properties["name"]}' on line 340, col 139
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["message_reference"].properties["name"]}')) # from line 340, col 139.
                    write(u'''>
      (advertiseName.c_str(),
       1000,
       boost::bind(&''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 343, col 21
                    if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 343, col 21.
                    write(u'''::''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 343, col 38
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 343, col 38.
                    write(u'''_OnOneData, this, _1),
       ros''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 344, col 11
                    if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 344, col 11.
                    write(u'''::VoidPtr(),
       &this->compQueue,
       callback_options);
  this->''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 347, col 9
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 347, col 9.
                    write(u''' = nh.subscribe(''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 347, col 50
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 347, col 50.
                    write(u'''_options);
''')
                else: # generated from line 348, col 1
                    write(u'''  ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 349, col 3
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 349, col 3.
                    write(u'''_options = ros::SubscribeOptions::create<''')
                    _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["message_reference"],"parent",True),"properties",True)["name"] # u'$sub.properties["message_reference"].parent.properties["name"]' on line 349, col 69
                    if _v is not None: write(_filter(_v, rawExpr=u'$sub.properties["message_reference"].parent.properties["name"]')) # from line 349, col 69.
                    write(u'''::''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["message_reference"],"properties",True)["name"] # u'${sub.properties["message_reference"].properties["name"]}' on line 349, col 133
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["message_reference"].properties["name"]}')) # from line 349, col 133.
                    write(u'''>
      (advertiseName.c_str(),
       1000,
       boost::bind(&''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 352, col 21
                    if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 352, col 21.
                    write(u'''::''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 352, col 38
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 352, col 38.
                    write(u'''_OnOneData, this, _1),
       ros::VoidPtr(),
       &this->compQueue);
  this->''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 355, col 9
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 355, col 9.
                    write(u''' = nh.subscribe(''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 355, col 50
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 355, col 50.
                    write(u'''_options);  
''')
            write(u'''
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"publishers",True)) > 0: # generated from line 360, col 1
            for pub in VFSL([locals()]+SL+[globals(), builtin],"publishers",True): # generated from line 361, col 1
                write(u'''  // Component Publisher - ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["name"] # u'$pub.properties["name"]' on line 362, col 28
                if _v is not None: write(_filter(_v, rawExpr=u'$pub.properties["name"]')) # from line 362, col 28.
                write(u'''
  advertiseName = "''')
                _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["message_reference"],"properties",True)["name"] # u'${pub.properties["message_reference"].properties["name"]}' on line 363, col 20
                if _v is not None: write(_filter(_v, rawExpr=u'${pub.properties["message_reference"].properties["name"]}')) # from line 363, col 20.
                write(u'''";
  if (portGroupMap.find("''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["name"] # u'$pub.properties["name"]' on line 364, col 26
                if _v is not None: write(_filter(_v, rawExpr=u'$pub.properties["name"]')) # from line 364, col 26.
                write(u'''") != portGroupMap.end())
    advertiseName += "_" + portGroupMap["''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["name"] # u'$pub.properties["name"]' on line 365, col 42
                if _v is not None: write(_filter(_v, rawExpr=u'$pub.properties["name"]')) # from line 365, col 42.
                write(u'''"];
  this->''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["name"] # u'${pub.properties["name"]}' on line 366, col 9
                if _v is not None: write(_filter(_v, rawExpr=u'${pub.properties["name"]}')) # from line 366, col 9.
                write(u''' = nh.advertise<''')
                _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["message_reference"],"parent",True),"properties",True)["name"] # u'$pub.properties["message_reference"].parent.properties["name"]' on line 366, col 50
                if _v is not None: write(_filter(_v, rawExpr=u'$pub.properties["message_reference"].parent.properties["name"]')) # from line 366, col 50.
                write(u'''::''')
                _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["message_reference"],"properties",True)["name"] # u'${pub.properties["message_reference"].properties["name"]}' on line 366, col 114
                if _v is not None: write(_filter(_v, rawExpr=u'${pub.properties["message_reference"].properties["name"]}')) # from line 366, col 114.
                write(u'''>(advertiseName.c_str(), 1000);
''')
            write(u'''
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"provided_services",True)): # generated from line 370, col 1
            for server in VFSL([locals()]+SL+[globals(), builtin],"servers",True): # generated from line 371, col 1
                if VFSL([locals()]+SL+[globals(), builtin],"mod",True) != "": # generated from line 372, col 1
                    write(u'''  callback_options.alias = "''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'${server.properties["service_reference"].properties["name"]}' on line 373, col 29
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["service_reference"].properties["name"]}')) # from line 373, col 29.
                    write(u'''Callback";
  callback_options.priority = ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["priority"] # u'$server.properties["priority"]' on line 374, col 31
                    if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["priority"]')) # from line 374, col 31.
                    write(u''';
  callback_options.deadline.sec =''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"int",False)(server.properties["deadline"].split('.')[0]) # u'${int(server.properties["deadline"].split(\'.\')[0])}' on line 375, col 34
                    if _v is not None: write(_filter(_v, rawExpr=u'${int(server.properties["deadline"].split(\'.\')[0])}')) # from line 375, col 34.
                    write(u''';
  callback_options.deadline.nsec = ''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"int",False)(float('0.' + (server.properties["deadline"].split('.')[1]))*1000000000) # u'${int(float(\'0.\' + (server.properties["deadline"].split(\'.\')[1]))*1000000000)}' on line 376, col 36
                    if _v is not None: write(_filter(_v, rawExpr=u'${int(float(\'0.\' + (server.properties["deadline"].split(\'.\')[1]))*1000000000)}')) # from line 376, col 36.
                    write(u''';
''')
                write(u'''  // Component Server - ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'$server.properties["name"]' on line 378, col 25
                if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["name"]')) # from line 378, col 25.
                write(u'''
  advertiseName = "''')
                _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'$server.properties["service_reference"].properties["name"]' on line 379, col 20
                if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["service_reference"].properties["name"]')) # from line 379, col 20.
                write(u'''";
  if (portGroupMap.find("''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'$server.properties["name"]' on line 380, col 26
                if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["name"]')) # from line 380, col 26.
                write(u'''") != portGroupMap.end())
    advertiseName += "_" + portGroupMap["''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'$server.properties["name"]' on line 381, col 42
                if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["name"]')) # from line 381, col 42.
                write(u'''"];
  ros''')
                _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 382, col 6
                if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 382, col 6.
                write(u'''::AdvertiseServiceOptions ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'${server.properties["name"]}' on line 382, col 38
                if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["name"]}')) # from line 382, col 38.
                write(u'''_server_options;
''')
                if VFSL([locals()]+SL+[globals(), builtin],"mod",True) != "": # generated from line 383, col 1
                    write(u'''  ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'${server.properties["name"]}' on line 384, col 3
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["name"]}')) # from line 384, col 3.
                    write(u'''_server_options = ros''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 384, col 52
                    if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 384, col 52.
                    write(u'''::AdvertiseServiceOptions::create<''')
                    _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"parent",True),"properties",True)["name"] # u'$server.properties["service_reference"].parent.properties["name"]' on line 384, col 92
                    if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["service_reference"].parent.properties["name"]')) # from line 384, col 92.
                    write(u'''::''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'$server.properties["service_reference"].properties["name"]' on line 384, col 159
                    if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["service_reference"].properties["name"]')) # from line 384, col 159.
                    write(u'''>
      (advertiseName.c_str(),
       boost::bind(&''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 386, col 21
                    if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 386, col 21.
                    write(u'''::''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'${server.properties["service_reference"].properties["name"]}' on line 386, col 38
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["service_reference"].properties["name"]}')) # from line 386, col 38.
                    write(u'''Callback, this, _1, _2),
       ros''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 387, col 11
                    if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 387, col 11.
                    write(u'''::VoidPtr(),
       &this->compQueue,
       callback_options);
  this->''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'${server.properties["name"]}' on line 390, col 9
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["name"]}')) # from line 390, col 9.
                    write(u''' = nh.advertiseService(''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'${server.properties["name"]}' on line 390, col 60
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["name"]}')) # from line 390, col 60.
                    write(u'''_server_options);
''')
                else: # generated from line 391, col 1
                    write(u'''  ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'${server.properties["name"]}' on line 392, col 3
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["name"]}')) # from line 392, col 3.
                    write(u'''_server_options = ros::AdvertiseServiceOptions::create<''')
                    _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"parent",True),"properties",True)["name"] # u'$server.properties["service_reference"].parent.properties["name"]' on line 392, col 86
                    if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["service_reference"].parent.properties["name"]')) # from line 392, col 86.
                    write(u'''::''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'$server.properties["service_reference"].properties["name"]' on line 392, col 153
                    if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["service_reference"].properties["name"]')) # from line 392, col 153.
                    write(u'''>
      (advertiseName.c_str(),
       boost::bind(&''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 394, col 21
                    if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 394, col 21.
                    write(u'''::''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'${server.properties["service_reference"].properties["name"]}' on line 394, col 38
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["service_reference"].properties["name"]}')) # from line 394, col 38.
                    write(u'''Callback, this, _1, _2),
       ros::VoidPtr(),
       &this->compQueue);
  this->''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'${server.properties["name"]}' on line 397, col 9
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["name"]}')) # from line 397, col 9.
                    write(u''' = nh.advertiseService(''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'${server.properties["name"]}' on line 397, col 60
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["name"]}')) # from line 397, col 60.
                    write(u'''_server_options);  
''')
            write(u''' 
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"required_services",True)) > 0: # generated from line 402, col 1
            write(u'''  // Configure all required services associated with this component
''')
            for client in VFSL([locals()]+SL+[globals(), builtin],"clients",True): # generated from line 404, col 1
                write(u'''  // Component Client - ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"client",True),"properties",True)["name"] # u'$client.properties["name"]' on line 405, col 25
                if _v is not None: write(_filter(_v, rawExpr=u'$client.properties["name"]')) # from line 405, col 25.
                write(u'''
  advertiseName = "''')
                _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"client",True),"properties",True)["service_reference"],"properties",True)["name"] # u'$client.properties["service_reference"].properties["name"]' on line 406, col 20
                if _v is not None: write(_filter(_v, rawExpr=u'$client.properties["service_reference"].properties["name"]')) # from line 406, col 20.
                write(u'''";
  if (portGroupMap.find("''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"client",True),"properties",True)["name"] # u'$client.properties["name"]' on line 407, col 26
                if _v is not None: write(_filter(_v, rawExpr=u'$client.properties["name"]')) # from line 407, col 26.
                write(u'''") != portGroupMap.end())
    advertiseName += "_" + portGroupMap["''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"client",True),"properties",True)["name"] # u'$client.properties["name"]' on line 408, col 42
                if _v is not None: write(_filter(_v, rawExpr=u'$client.properties["name"]')) # from line 408, col 42.
                write(u'''"];
  this->''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"client",True),"properties",True)["name"] # u'${client.properties["name"]}' on line 409, col 9
                if _v is not None: write(_filter(_v, rawExpr=u'${client.properties["name"]}')) # from line 409, col 9.
                write(u''' = nh.serviceClient<''')
                _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"client",True),"properties",True)["service_reference"],"parent",True),"properties",True)["name"] # u'$client.properties["service_reference"].parent.properties["name"]' on line 409, col 57
                if _v is not None: write(_filter(_v, rawExpr=u'$client.properties["service_reference"].parent.properties["name"]')) # from line 409, col 57.
                write(u'''::''')
                _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"client",True),"properties",True)["service_reference"],"properties",True)["name"] # u'$client.properties["service_reference"].properties["name"]' on line 409, col 124
                if _v is not None: write(_filter(_v, rawExpr=u'$client.properties["service_reference"].properties["name"]')) # from line 409, col 124.
                write(u'''>(advertiseName.c_str(), true); 
''')
            write(u'''
''')
        write(u'''  // Init Timer
''')
        if VFSL([locals()]+SL+[globals(), builtin],"mod",True) != "": # generated from line 414, col 1
            write(u'''  callback_options.alias = "Init_Timer";
  callback_options.priority = 99;
  callback_options.deadline.sec = 1;
  callback_options.deadline.nsec = 0;
  ros''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 419, col 6
            if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 419, col 6.
            write(u'''::TimerOptions timer_options;
  timer_options = 
    ros''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 421, col 8
            if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 421, col 8.
            write(u'''::TimerOptions
    (ros::Duration(-1),
     boost::bind(&''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 423, col 19
            if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 423, col 19.
            write(u'''::Init, this, _1),
     &this->compQueue,
     callback_options,
     true,
     false);
''')
        else  : # generated from line 428, col 1
            write(u'''  ros''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 429, col 6
            if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 429, col 6.
            write(u'''::TimerOptions timer_options;
  timer_options = 
    ros''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 431, col 8
            if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 431, col 8.
            write(u'''::TimerOptions
    (ros::Duration(-1),
     boost::bind(&''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 433, col 19
            if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 433, col 19.
            write(u'''::Init, this, _1),
     &this->compQueue,
     true,
     false);
''')
        write(u'''  this->initOneShotTimer = nh.createTimer(timer_options);
  this->initOneShotTimer.stop();
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"timers",True)): # generated from line 440, col 1
            for timer in VFSL([locals()]+SL+[globals(), builtin],"timers",True): # generated from line 441, col 1
                if VFSL([locals()]+SL+[globals(), builtin],"mod",True) != "": # generated from line 442, col 1
                    write(u'''  callback_options.alias = "''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 443, col 29
                    if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 443, col 29.
                    write(u'''Callback";
  callback_options.priority = ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["priority"] # u'$timer.properties["priority"]' on line 444, col 31
                    if _v is not None: write(_filter(_v, rawExpr=u'$timer.properties["priority"]')) # from line 444, col 31.
                    write(u''';
  callback_options.deadline.sec = ''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"int",False)(timer.properties["deadline"].split('.')[0]) # u'${int(timer.properties["deadline"].split(\'.\')[0])}' on line 445, col 35
                    if _v is not None: write(_filter(_v, rawExpr=u'${int(timer.properties["deadline"].split(\'.\')[0])}')) # from line 445, col 35.
                    write(u''';
  callback_options.deadline.nsec = ''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"int",False)(float('0.' + (timer.properties["deadline"].split('.')[1]))*1000000000) # u'${int(float(\'0.\' + (timer.properties["deadline"].split(\'.\')[1]))*1000000000)}' on line 446, col 36
                    if _v is not None: write(_filter(_v, rawExpr=u'${int(float(\'0.\' + (timer.properties["deadline"].split(\'.\')[1]))*1000000000)}')) # from line 446, col 36.
                    write(u''';
  // Component Timer - ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'$timer.properties["name"]' on line 447, col 24
                    if _v is not None: write(_filter(_v, rawExpr=u'$timer.properties["name"]')) # from line 447, col 24.
                    write(u'''
  timer_options = 
    ros''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 449, col 8
                    if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 449, col 8.
                    write(u'''::TimerOptions
''')
                    if VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["period"] == "0.0": # generated from line 450, col 1
                        write(u'''    (ros::Duration(-1),
''')
                    else: # generated from line 452, col 1
                        write(u'''    (ros::Duration(''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["period"] # u'$timer.properties["period"]' on line 453, col 20
                        if _v is not None: write(_filter(_v, rawExpr=u'$timer.properties["period"]')) # from line 453, col 20.
                        write(u'''),
''')
                    write(u'''     boost::bind(&''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 455, col 19
                    if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 455, col 19.
                    write(u'''::''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 455, col 36
                    if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 455, col 36.
                    write(u'''Callback, this, _1),
''')
                    if VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["period"] == "0.0": # generated from line 456, col 1
                        write(u'''     &this->compQueue,
     callback_options,
     true,
     false);
''')
                    else: # generated from line 461, col 1
                        write(u'''     &this->compQueue,
     callback_options,
     false,
     false);
''')
                else : # generated from line 467, col 1
                    write(u'''  // Component Timer - ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'$timer.properties["name"]' on line 468, col 24
                    if _v is not None: write(_filter(_v, rawExpr=u'$timer.properties["name"]')) # from line 468, col 24.
                    write(u'''
  timer_options = 
    ros''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 470, col 8
                    if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 470, col 8.
                    write(u'''::TimerOptions
''')
                    if VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["period"] == "0.0": # generated from line 471, col 1
                        write(u'''    (ros::Duration(-1),
''')
                    else: # generated from line 473, col 1
                        write(u'''    (ros::Duration(''')
                        _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["period"] # u'$timer.properties["period"]' on line 474, col 20
                        if _v is not None: write(_filter(_v, rawExpr=u'$timer.properties["period"]')) # from line 474, col 20.
                        write(u'''),
''')
                    write(u'''     boost::bind(&''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 476, col 19
                    if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 476, col 19.
                    write(u'''::''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 476, col 36
                    if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 476, col 36.
                    write(u'''Callback, this, _1),
''')
                    if VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["period"] == "0.0": # generated from line 477, col 1
                        write(u'''     &this->compQueue, true, false);
''')
                    else: # generated from line 479, col 1
                        write(u'''     &this->compQueue, false, false);
''')
                write(u'''  this->''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'$(timer.properties["name"])' on line 483, col 9
                if _v is not None: write(_filter(_v, rawExpr=u'$(timer.properties["name"])')) # from line 483, col 9.
                write(u''' = nh.createTimer(timer_options);
''')
            write(u'''
''')
        write(u'''  // Identify the pwd of Node Executable
  std::string s = node_argv[0];
  std::string exec_path = s;
  std::string delimiter = "/";
  std::string exec, pwd;
  size_t pos = 0;
  while ((pos = s.find(delimiter)) != std::string::npos) {
    exec = s.substr(0, pos);
    s.erase(0, pos + delimiter.length());
  }
  exec = s.substr(0, pos);
  pwd = exec_path.erase(exec_path.find(exec), exec.length());
  std::string log_file_path = pwd + nodeName + "." + compName + ".log"; 
  
  // Create the log file & open file stream
  LOGGER.CREATE_FILE(log_file_path);
  
  // Establish log levels of LOGGER
  LOGGER.SET_LOG_LEVELS(logLevels);

''')
        if VFSL([locals()]+SL+[globals(), builtin],"component_type",True) == "KSP": # generated from line 507, col 1
            write(u'''  krpci_client.SetName(nodeName + "_" + compName);
''')
        write(u'''
  this->comp_sync_pub = nh.advertise<std_msgs::Bool>("component_synchronization", 1000);
  
  ros''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 513, col 6
        if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 513, col 6.
        write(u'''::SubscribeOptions comp_sync_sub_options;
''')
        if VFSL([locals()]+SL+[globals(), builtin],"mod",True) != "": # generated from line 514, col 1
            write(u'''  rosmod::ROSMOD_Callback_Options sync_callback_options;
  comp_sync_sub_options = ros''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 516, col 30
            if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 516, col 30.
            write(u'''::SubscribeOptions::create<std_msgs::Bool>
    ("component_synchronization",
     1000,
     boost::bind(&''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 519, col 19
            if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 519, col 19.
            write(u'''::component_synchronization_OnOneData, this, _1),
     ros''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 520, col 9
            if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 520, col 9.
            write(u'''::VoidPtr(),
     &this->compQueue,
     sync_callback_options);
''')
        else: # generated from line 523, col 1
            write(u'''  comp_sync_sub_options = ros''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 524, col 30
            if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 524, col 30.
            write(u'''::SubscribeOptions::create<std_msgs::Bool>
    ("component_synchronization",
     1000,
     boost::bind(&''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 527, col 19
            if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 527, col 19.
            write(u'''::component_synchronization_OnOneData, this, _1),
     ros''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 528, col 9
            if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 528, col 9.
            write(u'''::VoidPtr(),
     &this->compQueue);
''')
        write(u'''  this->comp_sync_sub = nh.subscribe(comp_sync_sub_options);

  ros''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 533, col 6
        if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 533, col 6.
        write(u'''::Time now = ros''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 533, col 28
        if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 533, col 28.
        write(u'''::Time::now();
  while ( this->comp_sync_sub.getNumPublishers() < this->num_comps_to_sync &&
\t  (ros''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 535, col 8
        if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 535, col 8.
        write(u'''::Time::now() - now) < ros''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"mod",True) # u'${mod}' on line 535, col 40
        if _v is not None: write(_filter(_v, rawExpr=u'${mod}')) # from line 535, col 40.
        write(u'''::Duration(comp_sync_timeout) )
    ros::Duration(0.1).sleep();
  ros::Duration(0.5).sleep();
  this->comp_sync_sub.shutdown();
  this->comp_sync_pub.shutdown();

  this->initOneShotTimer.start();
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"timers",True)): # generated from line 542, col 1
            for timer in VFSL([locals()]+SL+[globals(), builtin],"timers",True): # generated from line 543, col 1
                write(u'''  this->''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'$(timer.properties["name"])' on line 544, col 9
                if _v is not None: write(_filter(_v, rawExpr=u'$(timer.properties["name"])')) # from line 544, col 9.
                write(u'''.start();
''')
        write(u'''  
''')
        if VFSL([locals()]+SL+[globals(), builtin],"mod",True) != "": # generated from line 548, col 1
            write(u'''  compQueue.ROSMOD_LOGGER.CREATE_FILE(pwd + "ROSMOD_DEBUG." + nodeName + "." + compName + ".log");
''')
        write(u'''}

extern "C" {
  Component *maker(ComponentConfig &config, int argc, char **argv) {
    return new ''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'${component_name}' on line 555, col 16
        if _v is not None: write(_filter(_v, rawExpr=u'${component_name}')) # from line 555, col 16.
        write(u'''(config,argc,argv);
  }
}
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_component_cpp= 'respond'

## END CLASS DEFINITION

if not hasattr(component_cpp, '_initCheetahAttributes'):
    templateAPIClass = getattr(component_cpp, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(component_cpp)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=component_cpp()).run()


