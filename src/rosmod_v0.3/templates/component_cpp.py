#!/usr/bin/env python




##################################################
## DEPENDENCIES
import sys
import os
import os.path
try:
    import builtins as builtin
except ImportError:
    import __builtin__ as builtin
from os.path import getmtime, exists
import time
import types
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import *
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers

##################################################
## MODULE CONSTANTS
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.4.4'
__CHEETAH_versionTuple__ = (2, 4, 4, 'development', 0)
__CHEETAH_genTime__ = 1436376777.143772
__CHEETAH_genTimestamp__ = 'Wed Jul  8 12:32:57 2015'
__CHEETAH_src__ = '/home/jeb/Repositories/rosmod/src/rosmod_v0.3/templates/component_cpp.tmpl'
__CHEETAH_srcLastModified__ = 'Wed Jul  8 11:41:11 2015'
__CHEETAH_docstring__ = 'Autogenerated by Cheetah: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class component_cpp(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        super(component_cpp, self).__init__(*args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        _v = VFSL([locals()]+SL+[globals(), builtin],"hash_include",True) # u'$hash_include' on line 1, col 1
        if _v is not None: write(_filter(_v, rawExpr=u'$hash_include')) # from line 1, col 1.
        write(u''' "''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"package_name",True) # u'$package_name' on line 1, col 16
        if _v is not None: write(_filter(_v, rawExpr=u'$package_name')) # from line 1, col 16.
        write(u'''/''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'${component_name}' on line 1, col 30
        if _v is not None: write(_filter(_v, rawExpr=u'${component_name}')) # from line 1, col 30.
        write(u'''.hpp"

''')
        if VFSL([locals()]+SL+[globals(), builtin],"component_type",True) == "KSP": # generated from line 3, col 1
            write(u'''KRPCI krpci_client;
''')
        write(u'''
''')
        if VFSL([locals()]+SL+[globals(), builtin],"user_globals",True) == "": # generated from line 7, col 1
            write(u'''//# Start User Globals Marker
//# End User Globals Marker
''')
        else: # generated from line 10, col 1
            write(u'''//# Start User Globals Marker
''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"user_globals",True) # u'$user_globals' on line 12, col 1
            if _v is not None: write(_filter(_v, rawExpr=u'$user_globals')) # from line 12, col 1.
            write(u'''//# End User Globals Marker
''')
        write(u'''
// Initialization Function
''')
        if VFSL([locals()]+SL+[globals(), builtin],"init_business_logic",True) == "": # generated from line 16, col 1
            write(u'''//# Start Init Marker
void ''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 18, col 6
            if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 18, col 6.
            write(u'''::Init(const ros::TimerEvent& event)
{
  LOGGER.DEBUG("Entering ''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'${component_name}' on line 20, col 26
            if _v is not None: write(_filter(_v, rawExpr=u'${component_name}')) # from line 20, col 26.
            write(u'''::Init");
  // Initialize Here

  // Stop Init Timer
  initOneShotTimer.stop();
  LOGGER.DEBUG("Exiting ''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'${component_name}' on line 25, col 25
            if _v is not None: write(_filter(_v, rawExpr=u'${component_name}')) # from line 25, col 25.
            write(u'''::Init");
}
//# End Init Marker
''')
        else: # generated from line 28, col 1
            write(u'''//# Start Init Marker
''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"init_business_logic",True) # u'$init_business_logic' on line 30, col 1
            if _v is not None: write(_filter(_v, rawExpr=u'$init_business_logic')) # from line 30, col 1.
            write(u'''//# End Init Marker
''')
        write(u'''
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"subscribers",True)) > 0: # generated from line 33, col 1
            for sub in VFSL([locals()]+SL+[globals(), builtin],"subscribers",True): # generated from line 34, col 1
                write(u'''// Subscriber Callback - ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 35, col 26
                if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 35, col 26.
                write(u'''
''')
                if VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["business_logic"] == "": # generated from line 36, col 1
                    write(u'''//# Start ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 37, col 11
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 37, col 11.
                    write(u'''_OnOneData Marker
void ''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 38, col 6
                    if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 38, col 6.
                    write(u'''::''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 38, col 23
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 38, col 23.
                    write(u'''_OnOneData(const ''')
                    _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["message_reference"],"parent",True),"properties",True)["name"] # u'$sub.properties["message_reference"].parent.properties["name"]' on line 38, col 65
                    if _v is not None: write(_filter(_v, rawExpr=u'$sub.properties["message_reference"].parent.properties["name"]')) # from line 38, col 65.
                    write(u'''::''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["message_reference"],"properties",True)["name"] # u'${sub.properties["message_reference"].properties["name"]}' on line 38, col 129
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["message_reference"].properties["name"]}')) # from line 38, col 129.
                    write(u'''::ConstPtr& received_data)
{
  LOGGER.DEBUG("Entering ''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 40, col 26
                    if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 40, col 26.
                    write(u'''::''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 40, col 43
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 40, col 43.
                    write(u'''_OnOneData");
  // Business Logic for ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'$sub.properties["name"]' on line 41, col 25
                    if _v is not None: write(_filter(_v, rawExpr=u'$sub.properties["name"]')) # from line 41, col 25.
                    write(u''' Subscriber

  LOGGER.DEBUG("Exiting ''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 43, col 25
                    if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 43, col 25.
                    write(u'''::''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 43, col 42
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 43, col 42.
                    write(u'''_OnOneData");
}
//# End ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 45, col 9
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 45, col 9.
                    write(u'''_OnOneData Marker
''')
                else: # generated from line 46, col 1
                    write(u'''//# Start ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 47, col 11
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 47, col 11.
                    write(u'''_OnOneData Marker
''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["business_logic"] # u'$sub.properties["business_logic"]' on line 48, col 1
                    if _v is not None: write(_filter(_v, rawExpr=u'$sub.properties["business_logic"]')) # from line 48, col 1.
                    write(u'''//# End ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 48, col 42
                    if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 48, col 42.
                    write(u'''_OnOneData Marker
''')
            write(u'''
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"provided_services",True)) > 0: # generated from line 53, col 1
            for server in VFSL([locals()]+SL+[globals(), builtin],"servers",True): # generated from line 54, col 1
                write(u'''// Server Callback - ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'$server.properties["name"]' on line 55, col 22
                if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["name"]')) # from line 55, col 22.
                write(u'''
''')
                if VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["business_logic"] == "": # generated from line 56, col 1
                    write(u'''//# Start ''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'${server.properties["service_reference"].properties["name"]}' on line 57, col 11
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["service_reference"].properties["name"]}')) # from line 57, col 11.
                    write(u'''Callback Marker
bool ''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 58, col 6
                    if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 58, col 6.
                    write(u'''::''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'${server.properties["service_reference"].properties["name"]}' on line 58, col 23
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["service_reference"].properties["name"]}')) # from line 58, col 23.
                    write(u'''Callback(''')
                    _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"parent",True),"properties",True)["name"] # u'$server.properties["service_reference"].parent.properties["name"]' on line 58, col 92
                    if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["service_reference"].parent.properties["name"]')) # from line 58, col 92.
                    write(u'''::''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'$server.properties["service_reference"].properties["name"]' on line 58, col 159
                    if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["service_reference"].properties["name"]')) # from line 58, col 159.
                    write(u'''::Request  &req,
  ''')
                    _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"parent",True),"properties",True)["name"] # u'$server.properties["service_reference"].parent.properties["name"]' on line 59, col 3
                    if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["service_reference"].parent.properties["name"]')) # from line 59, col 3.
                    write(u'''::''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'$server.properties["service_reference"].properties["name"]' on line 59, col 70
                    if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["service_reference"].properties["name"]')) # from line 59, col 70.
                    write(u'''::Response &res)
{
  LOGGER.DEBUG("Entering ''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 61, col 26
                    if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 61, col 26.
                    write(u'''::''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'${server.properties["service_reference"].properties["name"]}' on line 61, col 43
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["service_reference"].properties["name"]}')) # from line 61, col 43.
                    write(u'''Callback");
  // Business Logic for ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'$server.properties["name"]' on line 62, col 25
                    if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["name"]')) # from line 62, col 25.
                    write(u''' Server

  LOGGER.DEBUG("Exiting ''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 64, col 25
                    if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 64, col 25.
                    write(u'''::''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'${server.properties["service_reference"].properties["name"]}' on line 64, col 42
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["service_reference"].properties["name"]}')) # from line 64, col 42.
                    write(u'''Callback");
  return true;
}
//# End ''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'${server.properties["service_reference"].properties["name"]}' on line 67, col 9
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["service_reference"].properties["name"]}')) # from line 67, col 9.
                    write(u'''Callback Marker
''')
                else: # generated from line 68, col 1
                    write(u'''//# Start ''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'${server.properties["service_reference"].properties["name"]}' on line 69, col 11
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["service_reference"].properties["name"]}')) # from line 69, col 11.
                    write(u'''Callback Marker
''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["business_logic"] # u'$server.properties["business_logic"]' on line 70, col 1
                    if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["business_logic"]')) # from line 70, col 1.
                    write(u'''//# End ''')
                    _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'${server.properties["service_reference"].properties["name"]}' on line 70, col 45
                    if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["service_reference"].properties["name"]}')) # from line 70, col 45.
                    write(u'''Callback Marker
''')
            write(u'''
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"timers",True)) > 0: # generated from line 75, col 1
            for timer in VFSL([locals()]+SL+[globals(), builtin],"timers",True): # generated from line 76, col 1
                write(u'''// Timer Callback - ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'$timer.properties["name"]' on line 77, col 21
                if _v is not None: write(_filter(_v, rawExpr=u'$timer.properties["name"]')) # from line 77, col 21.
                write(u'''
''')
                if VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["business_logic"] == "": # generated from line 78, col 1
                    write(u'''//# Start ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 79, col 11
                    if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 79, col 11.
                    write(u'''Callback Marker
void ''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 80, col 6
                    if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 80, col 6.
                    write(u'''::''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 80, col 23
                    if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 80, col 23.
                    write(u'''Callback(const ros::TimerEvent& event)
{
  LOGGER.DEBUG("Entering ''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 82, col 26
                    if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 82, col 26.
                    write(u'''::''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 82, col 43
                    if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 82, col 43.
                    write(u'''Callback");
  // Business Logic for ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'$timer.properties["name"]' on line 83, col 25
                    if _v is not None: write(_filter(_v, rawExpr=u'$timer.properties["name"]')) # from line 83, col 25.
                    write(u''' Timer

  LOGGER.DEBUG("Exiting ''')
                    _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 85, col 25
                    if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 85, col 25.
                    write(u'''::''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 85, col 42
                    if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 85, col 42.
                    write(u'''Callback");
}
//# End ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 87, col 9
                    if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 87, col 9.
                    write(u'''Callback Marker
''')
                else: # generated from line 88, col 1
                    write(u'''//# Start ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 89, col 11
                    if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 89, col 11.
                    write(u'''Callback Marker
''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["business_logic"] # u'$timer.properties["business_logic"]' on line 90, col 1
                    if _v is not None: write(_filter(_v, rawExpr=u'$timer.properties["business_logic"]')) # from line 90, col 1.
                    write(u'''//# End ''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 90, col 44
                    if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 90, col 44.
                    write(u'''Callback Marker
''')
            write(u'''
''')
        write(u'''
// Destructor - Cleanup Ports & Timers
''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 97, col 1
        if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 97, col 1.
        write(u'''::~''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'${component_name}' on line 97, col 19
        if _v is not None: write(_filter(_v, rawExpr=u'${component_name}')) # from line 97, col 19.
        write(u'''()
{
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"timers",True)) > 0: # generated from line 99, col 1
            for timer in VFSL([locals()]+SL+[globals(), builtin],"timers",True): # generated from line 100, col 1
                write(u'''  ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 101, col 3
                if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 101, col 3.
                write(u'''.stop();
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"publishers",True)) > 0: # generated from line 104, col 1
            for pub in VFSL([locals()]+SL+[globals(), builtin],"publishers",True): # generated from line 105, col 1
                write(u'''  ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["name"] # u'${pub.properties["name"]}' on line 106, col 3
                if _v is not None: write(_filter(_v, rawExpr=u'${pub.properties["name"]}')) # from line 106, col 3.
                write(u'''.shutdown();
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"subscribers",True)) > 0: # generated from line 109, col 1
            for sub in VFSL([locals()]+SL+[globals(), builtin],"subscribers",True): # generated from line 110, col 1
                write(u'''  ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 111, col 3
                if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 111, col 3.
                write(u'''.shutdown();
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"provided_services",True)) > 0: # generated from line 114, col 1
            for server in VFSL([locals()]+SL+[globals(), builtin],"servers",True): # generated from line 115, col 1
                write(u'''  ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'${server.properties["name"]}' on line 116, col 3
                if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["name"]}')) # from line 116, col 3.
                write(u'''.shutdown();
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"required_services",True)) > 0: # generated from line 119, col 1
            for client in VFSL([locals()]+SL+[globals(), builtin],"clients",True): # generated from line 120, col 1
                write(u'''  ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"client",True),"properties",True)["name"] # u'${client.properties["name"]}' on line 121, col 3
                if _v is not None: write(_filter(_v, rawExpr=u'${client.properties["name"]}')) # from line 121, col 3.
                write(u'''.shutdown();
''')
        if VFSL([locals()]+SL+[globals(), builtin],"destructor",True) == "": # generated from line 124, col 1
            write(u'''  //# Start Destructor Marker
  //# End Destructor Marker
''')
        else: # generated from line 127, col 1
            write(u'''  //# Start Destructor Marker
  ''')
            _v = VFSL([locals()]+SL+[globals(), builtin],"destructor",True) # u'$destructor' on line 129, col 3
            if _v is not None: write(_filter(_v, rawExpr=u'$destructor')) # from line 129, col 3.
            write(u'''  //# End Destructor Marker
''')
        write(u'''}

// Startup - Setup Component Ports & Timers
void ''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 134, col 6
        if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 134, col 6.
        write(u'''::startUp()
{
  LOGGER.DEBUG("Entering ''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 136, col 26
        if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 136, col 26.
        write(u'''::startUp");
  ros::NodeHandle nh;
  std::string advertiseName;

''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"subscribers",True)) > 0: # generated from line 140, col 1
            for sub in VFSL([locals()]+SL+[globals(), builtin],"subscribers",True): # generated from line 141, col 1
                write(u'''  // Component Subscriber - ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'$sub.properties["name"]' on line 142, col 29
                if _v is not None: write(_filter(_v, rawExpr=u'$sub.properties["name"]')) # from line 142, col 29.
                write(u'''
  advertiseName = "''')
                _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["message_reference"],"properties",True)["name"] # u'${sub.properties["message_reference"].properties["name"]}' on line 143, col 20
                if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["message_reference"].properties["name"]}')) # from line 143, col 20.
                write(u'''";
  if (portGroupMap.find("''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'$sub.properties["name"]' on line 144, col 26
                if _v is not None: write(_filter(_v, rawExpr=u'$sub.properties["name"]')) # from line 144, col 26.
                write(u'''") != portGroupMap.end())
    advertiseName += "_" + portGroupMap["''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)['name'] # u"${sub.properties['name']}" on line 145, col 42
                if _v is not None: write(_filter(_v, rawExpr=u"${sub.properties['name']}")) # from line 145, col 42.
                write(u'''"];
  ros::SubscribeOptions ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 146, col 25
                if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 146, col 25.
                write(u'''_options;
  ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 147, col 3
                if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 147, col 3.
                write(u'''_options = ros::SubscribeOptions::create<''')
                _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["message_reference"],"parent",True),"properties",True)["name"] # u'$sub.properties["message_reference"].parent.properties["name"]' on line 147, col 69
                if _v is not None: write(_filter(_v, rawExpr=u'$sub.properties["message_reference"].parent.properties["name"]')) # from line 147, col 69.
                write(u'''::''')
                _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["message_reference"],"properties",True)["name"] # u'${sub.properties["message_reference"].properties["name"]}' on line 147, col 133
                if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["message_reference"].properties["name"]}')) # from line 147, col 133.
                write(u'''>
      (advertiseName.c_str(),
       1000,
       boost::bind(&''')
                _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 150, col 21
                if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 150, col 21.
                write(u'''::''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 150, col 38
                if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 150, col 38.
                write(u'''_OnOneData, this, _1),
       ros::VoidPtr(),
       &this->compQueue);
  this->''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 153, col 9
                if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 153, col 9.
                write(u''' = nh.subscribe(''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"sub",True),"properties",True)["name"] # u'${sub.properties["name"]}' on line 153, col 50
                if _v is not None: write(_filter(_v, rawExpr=u'${sub.properties["name"]}')) # from line 153, col 50.
                write(u'''_options);
''')
            write(u'''
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"publishers",True)) > 0: # generated from line 157, col 1
            for pub in VFSL([locals()]+SL+[globals(), builtin],"publishers",True): # generated from line 158, col 1
                write(u'''  // Component Publisher - ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["name"] # u'$pub.properties["name"]' on line 159, col 28
                if _v is not None: write(_filter(_v, rawExpr=u'$pub.properties["name"]')) # from line 159, col 28.
                write(u'''
  advertiseName = "''')
                _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["message_reference"],"properties",True)["name"] # u'${pub.properties["message_reference"].properties["name"]}' on line 160, col 20
                if _v is not None: write(_filter(_v, rawExpr=u'${pub.properties["message_reference"].properties["name"]}')) # from line 160, col 20.
                write(u'''";
  if (portGroupMap.find("''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["name"] # u'$pub.properties["name"]' on line 161, col 26
                if _v is not None: write(_filter(_v, rawExpr=u'$pub.properties["name"]')) # from line 161, col 26.
                write(u'''") != portGroupMap.end())
    advertiseName += "_" + portGroupMap["''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["name"] # u'$pub.properties["name"]' on line 162, col 42
                if _v is not None: write(_filter(_v, rawExpr=u'$pub.properties["name"]')) # from line 162, col 42.
                write(u'''"];
  this->''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["name"] # u'${pub.properties["name"]}' on line 163, col 9
                if _v is not None: write(_filter(_v, rawExpr=u'${pub.properties["name"]}')) # from line 163, col 9.
                write(u''' = nh.advertise<''')
                _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["message_reference"],"parent",True),"properties",True)["name"] # u'$pub.properties["message_reference"].parent.properties["name"]' on line 163, col 50
                if _v is not None: write(_filter(_v, rawExpr=u'$pub.properties["message_reference"].parent.properties["name"]')) # from line 163, col 50.
                write(u'''::''')
                _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"pub",True),"properties",True)["message_reference"],"properties",True)["name"] # u'${pub.properties["message_reference"].properties["name"]}' on line 163, col 114
                if _v is not None: write(_filter(_v, rawExpr=u'${pub.properties["message_reference"].properties["name"]}')) # from line 163, col 114.
                write(u'''>(advertiseName.c_str(), 1000);
''')
            write(u'''
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"provided_services",True)): # generated from line 167, col 1
            for server in VFSL([locals()]+SL+[globals(), builtin],"servers",True): # generated from line 168, col 1
                write(u'''  // Component Server - ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'$server.properties["name"]' on line 169, col 25
                if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["name"]')) # from line 169, col 25.
                write(u'''
  advertiseName = "''')
                _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'$server.properties["service_reference"].properties["name"]' on line 170, col 20
                if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["service_reference"].properties["name"]')) # from line 170, col 20.
                write(u'''";
  if (portGroupMap.find("''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'$server.properties["name"]' on line 171, col 26
                if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["name"]')) # from line 171, col 26.
                write(u'''") != portGroupMap.end())
    advertiseName += "_" + portGroupMap["''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'$server.properties["name"]' on line 172, col 42
                if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["name"]')) # from line 172, col 42.
                write(u'''"];
  ros::AdvertiseServiceOptions ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'${server.properties["name"]}' on line 173, col 32
                if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["name"]}')) # from line 173, col 32.
                write(u'''_server_options;
  ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'${server.properties["name"]}' on line 174, col 3
                if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["name"]}')) # from line 174, col 3.
                write(u'''_server_options = ros::AdvertiseServiceOptions::create<''')
                _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"parent",True),"properties",True)["name"] # u'$server.properties["service_reference"].parent.properties["name"]' on line 174, col 86
                if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["service_reference"].parent.properties["name"]')) # from line 174, col 86.
                write(u'''::''')
                _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'$server.properties["service_reference"].properties["name"]' on line 174, col 153
                if _v is not None: write(_filter(_v, rawExpr=u'$server.properties["service_reference"].properties["name"]')) # from line 174, col 153.
                write(u'''>
      (advertiseName.c_str(),
       boost::bind(&''')
                _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 176, col 21
                if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 176, col 21.
                write(u'''::''')
                _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["service_reference"],"properties",True)["name"] # u'${server.properties["service_reference"].properties["name"]}' on line 176, col 38
                if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["service_reference"].properties["name"]}')) # from line 176, col 38.
                write(u'''Callback, this, _1, _2),
       ros::VoidPtr(),
       &this->compQueue);
  this->''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'${server.properties["name"]}' on line 179, col 9
                if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["name"]}')) # from line 179, col 9.
                write(u''' = nh.advertiseService(''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"server",True),"properties",True)["name"] # u'${server.properties["name"]}' on line 179, col 60
                if _v is not None: write(_filter(_v, rawExpr=u'${server.properties["name"]}')) # from line 179, col 60.
                write(u'''_server_options);
''')
            write(u''' 
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"required_services",True)) > 0: # generated from line 183, col 1
            write(u'''  // Configure all required services associated with this component
''')
            for client in VFSL([locals()]+SL+[globals(), builtin],"clients",True): # generated from line 185, col 1
                write(u'''  // Component Client - ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"client",True),"properties",True)["name"] # u'$client.properties["name"]' on line 186, col 25
                if _v is not None: write(_filter(_v, rawExpr=u'$client.properties["name"]')) # from line 186, col 25.
                write(u'''
  advertiseName = "''')
                _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"client",True),"properties",True)["service_reference"],"properties",True)["name"] # u'$client.properties["service_reference"].properties["name"]' on line 187, col 20
                if _v is not None: write(_filter(_v, rawExpr=u'$client.properties["service_reference"].properties["name"]')) # from line 187, col 20.
                write(u'''";
  if (portGroupMap.find("''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"client",True),"properties",True)["name"] # u'$client.properties["name"]' on line 188, col 26
                if _v is not None: write(_filter(_v, rawExpr=u'$client.properties["name"]')) # from line 188, col 26.
                write(u'''") != portGroupMap.end())
    advertiseName += "_" + portGroupMap["''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"client",True),"properties",True)["name"] # u'$client.properties["name"]' on line 189, col 42
                if _v is not None: write(_filter(_v, rawExpr=u'$client.properties["name"]')) # from line 189, col 42.
                write(u'''"];
      this->''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"client",True),"properties",True)["name"] # u'${client.properties["name"]}' on line 190, col 13
                if _v is not None: write(_filter(_v, rawExpr=u'${client.properties["name"]}')) # from line 190, col 13.
                write(u''' = nh.serviceClient<''')
                _v = VFN(VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"client",True),"properties",True)["service_reference"],"parent",True),"properties",True)["name"] # u'$client.properties["service_reference"].parent.properties["name"]' on line 190, col 61
                if _v is not None: write(_filter(_v, rawExpr=u'$client.properties["service_reference"].parent.properties["name"]')) # from line 190, col 61.
                write(u'''::''')
                _v = VFN(VFN(VFSL([locals()]+SL+[globals(), builtin],"client",True),"properties",True)["service_reference"],"properties",True)["name"] # u'$client.properties["service_reference"].properties["name"]' on line 190, col 128
                if _v is not None: write(_filter(_v, rawExpr=u'$client.properties["service_reference"].properties["name"]')) # from line 190, col 128.
                write(u'''>(advertiseName.c_str()); 
''')
            write(u'''
''')
        write(u'''  // Init Timer
  ros::TimerOptions timer_options;
  timer_options = 
    ros::TimerOptions
    (ros::Duration(-1),
     boost::bind(&''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 199, col 19
        if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 199, col 19.
        write(u'''::Init, this, _1),
     &this->compQueue,
     true);
  this->initOneShotTimer = nh.createTimer(timer_options);  
  
''')
        if VFSL([locals()]+SL+[globals(), builtin],"len",False)(VFSL([locals()]+SL+[globals(), builtin],"timers",True)): # generated from line 204, col 1
            for timer in VFSL([locals()]+SL+[globals(), builtin],"timers",True): # generated from line 205, col 1
                write(u'''  // Component Timer - ''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'$timer.properties["name"]' on line 206, col 24
                if _v is not None: write(_filter(_v, rawExpr=u'$timer.properties["name"]')) # from line 206, col 24.
                write(u'''
  timer_options = 
    ros::TimerOptions
''')
                if VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["period"] == "0.0": # generated from line 209, col 1
                    write(u'''    (ros::Duration(-1),
''')
                else: # generated from line 211, col 1
                    write(u'''    (ros::Duration(''')
                    _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["period"] # u'$timer.properties["period"]' on line 212, col 20
                    if _v is not None: write(_filter(_v, rawExpr=u'$timer.properties["period"]')) # from line 212, col 20.
                    write(u'''),
''')
                write(u'''     boost::bind(&''')
                _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 214, col 19
                if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 214, col 19.
                write(u'''::''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'${timer.properties["name"]}' on line 214, col 36
                if _v is not None: write(_filter(_v, rawExpr=u'${timer.properties["name"]}')) # from line 214, col 36.
                write(u'''Callback, this, _1),
''')
                if VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["period"] == "0.0": # generated from line 215, col 1
                    write(u'''     &this->compQueue, true);
''')
                else: # generated from line 217, col 1
                    write(u'''     &this->compQueue);
''')
                write(u'''  this->''')
                _v = VFN(VFSL([locals()]+SL+[globals(), builtin],"timer",True),"properties",True)["name"] # u'$(timer.properties["name"])' on line 220, col 9
                if _v is not None: write(_filter(_v, rawExpr=u'$(timer.properties["name"])')) # from line 220, col 9.
                write(u''' = nh.createTimer(timer_options);
''')
            write(u'''
''')
        write(u'''  // Identify the pwd of Node Executable
  std::string s = node_argv[0];
  std::string exec_path = s;
  std::string delimiter = "/";
  std::string exec, pwd;
  size_t pos = 0;
  while ((pos = s.find(delimiter)) != std::string::npos) {
    exec = s.substr(0, pos);
    s.erase(0, pos + delimiter.length());
  }
  exec = s.substr(0, pos);
  pwd = exec_path.erase(exec_path.find(exec), exec.length());
  std::string log_file_path = pwd + nodeName + "." + compName + ".log"; 
  
  // Create the log file & open file stream
  LOGGER.CREATE_FILE(log_file_path);
  
  // Establish log levels of LOGGER
  LOGGER.SET_LOG_LEVELS(logLevels);

''')
        if VFSL([locals()]+SL+[globals(), builtin],"component_type",True) == "KSP": # generated from line 244, col 1
            write(u'''  krpci_client.SetName(nodeName + "_" + compName);
''')
        write(u'''  LOGGER.DEBUG("Exiting ''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'$component_name' on line 247, col 25
        if _v is not None: write(_filter(_v, rawExpr=u'$component_name')) # from line 247, col 25.
        write(u'''::startUp");
}

extern "C" {
  Component *maker(ComponentConfig &config, int argc, char **argv) {
    return new ''')
        _v = VFSL([locals()]+SL+[globals(), builtin],"component_name",True) # u'${component_name}' on line 252, col 16
        if _v is not None: write(_filter(_v, rawExpr=u'${component_name}')) # from line 252, col 16.
        write(u'''(config,argc,argv);
  }
}
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    _mainCheetahMethod_for_component_cpp= 'respond'

## END CLASS DEFINITION

if not hasattr(component_cpp, '_initCheetahAttributes'):
    templateAPIClass = getattr(component_cpp, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(component_cpp)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=component_cpp()).run()


